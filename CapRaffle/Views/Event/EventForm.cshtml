@model CapRaffle.Models.EventViewModel

@{
    ViewBag.Title = ViewBag.action + " event";
}
<script src="@Url.Content("~/Scripts/jquery-ui-timepicker-addon.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $("#SelectedEvent_DeadLine").datetimepicker({ dateFormat: 'dd.mm.yy' });
        $("#SelectedEvent_StartTime").datetimepicker({ dateFormat: 'dd.mm.yy' });
    });
</script>

<h2>@ViewBag.action event</h2>
<div class="eventForm">
@using (Html.BeginForm("Create", "Event"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    if (string.IsNullOrEmpty(Model.SelectedEvent.Creator)) {
        Model.SelectedEvent.Creator = HttpContext.Current.User.Identity.Name;
        Model.SelectedEvent.Created = DateTime.Now;
    }
    
    
    
    @Html.HiddenFor(x => x.SelectedEvent.EventId)
    @Html.HiddenFor(x => x.SelectedEvent.Creator)
    @Html.HiddenFor(x => x.SelectedEvent.Created)
    <p>
    @Html.LabelFor(x => x.SelectedEvent.Name)
    <br />
    @Html.EditorFor(x => x.SelectedEvent.Name)
    @Html.ValidationMessageFor(x => x.SelectedEvent.Name)
    </p><p>
    @Html.LabelFor(x => x.SelectedEvent.Description)
    <br />
    @Html.EditorFor(x => x.SelectedEvent.Description)
    @Html.ValidationMessageFor(x => x.SelectedEvent.Description)
    </p><p>
    @Html.LabelFor(x => x.SelectedEvent.AvailableSpots)
    <br />
    @Html.EditorFor(x => x.SelectedEvent.AvailableSpots)
    @Html.ValidationMessageFor(x => x.SelectedEvent.AvailableSpots)
    </p><p>
    @Html.LabelFor(x => x.SelectedEvent.CategoryId)
    <br />
    @Html.DropDownListFor(x => x.SelectedEvent.CategoryId, Model.Categories)
    @Html.ValidationMessageFor(x => x.SelectedEvent.CategoryId)
    </p><p>
    @Html.LabelFor(x => x.SelectedEvent.InformationUrl)
    <br />
    @Html.EditorFor(x => x.SelectedEvent.InformationUrl)
    @Html.ValidationMessageFor(x => x.SelectedEvent.InformationUrl)
    </p><p>
    @Html.LabelFor(x => x.SelectedEvent.StartTime)
    <br />
    @Html.EditorFor(x => x.SelectedEvent.StartTime)
    @Html.ValidationMessageFor(x => x.SelectedEvent.StartTime)
    </p>
    <p>
    @Html.LabelFor(x => x.SelectedEvent.DeadLine)
    <br />
    @Html.EditorFor(x => x.SelectedEvent.DeadLine)
    @Html.ValidationMessageFor(x => x.SelectedEvent.DeadLine)
    </p>
    <p>
    @Html.Label("Choose between automatic and manual drawing")
    <br />
    @Html.RadioButtonFor(x => x.SelectedEvent.IsAutomaticDrawing, "false") Manual
    @Html.RadioButtonFor(x => x.SelectedEvent.IsAutomaticDrawing, "true") Automatic
    </p>
    <div class="buttons">
        <button type="submit" class="positive" name="Submit">
            <img src="@Url.Content("~/Content/images/apply2.png")" alt=""/>
            Submit
        </button>
    </div>    
}
</div>