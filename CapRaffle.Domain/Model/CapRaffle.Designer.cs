//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CapRaffleModel", "FK_Event_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapRaffle.Domain.Model.Category), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapRaffle.Domain.Model.Event), true)]
[assembly: EdmRelationshipAttribute("CapRaffleModel", "FK_Winner_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapRaffle.Domain.Model.Category), "Winner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapRaffle.Domain.Model.Winner), true)]
[assembly: EdmRelationshipAttribute("CapRaffleModel", "FK_UserEvent_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapRaffle.Domain.Model.Event), "UserEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapRaffle.Domain.Model.UserEvent), true)]
[assembly: EdmRelationshipAttribute("CapRaffleModel", "FK_Winner_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapRaffle.Domain.Model.Event), "Winner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapRaffle.Domain.Model.Winner), true)]
[assembly: EdmRelationshipAttribute("CapRaffleModel", "FK_RuleSet_Rule", "Rule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapRaffle.Domain.Model.Rule), "RuleSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapRaffle.Domain.Model.RuleSet), true)]
[assembly: EdmRelationshipAttribute("CapRaffleModel", "FK_UserEvent_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapRaffle.Domain.Model.User), "UserEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapRaffle.Domain.Model.UserEvent), true)]
[assembly: EdmRelationshipAttribute("CapRaffleModel", "FK_Winner_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapRaffle.Domain.Model.User), "Winner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapRaffle.Domain.Model.Winner), true)]

#endregion

namespace CapRaffle.Domain.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CapRaffleContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CapRaffleContext object using the connection string found in the 'CapRaffleContext' section of the application configuration file.
        /// </summary>
        public CapRaffleContext() : base("name=CapRaffleContext", "CapRaffleContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CapRaffleContext object.
        /// </summary>
        public CapRaffleContext(string connectionString) : base(connectionString, "CapRaffleContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CapRaffleContext object.
        /// </summary>
        public CapRaffleContext(EntityConnection connection) : base(connection, "CapRaffleContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rule> Rules
        {
            get
            {
                if ((_Rules == null))
                {
                    _Rules = base.CreateObjectSet<Rule>("Rules");
                }
                return _Rules;
            }
        }
        private ObjectSet<Rule> _Rules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RuleSet> RuleSets
        {
            get
            {
                if ((_RuleSets == null))
                {
                    _RuleSets = base.CreateObjectSet<RuleSet>("RuleSets");
                }
                return _RuleSets;
            }
        }
        private ObjectSet<RuleSet> _RuleSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserEvent> UserEvents
        {
            get
            {
                if ((_UserEvents == null))
                {
                    _UserEvents = base.CreateObjectSet<UserEvent>("UserEvents");
                }
                return _UserEvents;
            }
        }
        private ObjectSet<UserEvent> _UserEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Winner> Winners
        {
            get
            {
                if ((_Winners == null))
                {
                    _Winners = base.CreateObjectSet<Winner>("Winners");
                }
                return _Winners;
            }
        }
        private ObjectSet<Winner> _Winners;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRules(Rule rule)
        {
            base.AddObject("Rules", rule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RuleSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuleSets(RuleSet ruleSet)
        {
            base.AddObject("RuleSets", ruleSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserEvents(UserEvent userEvent)
        {
            base.AddObject("UserEvents", userEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Winners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWinners(Winner winner)
        {
            base.AddObject("Winners", winner);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CapRaffleModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.Boolean isActive)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.IsActive = isActive;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Event_Category", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("CapRaffleModel.FK_Event_Category", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("CapRaffleModel.FK_Event_Category", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Winner_Category", "Winner")]
        public EntityCollection<Winner> Winners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Winner>("CapRaffleModel.FK_Winner_Category", "Winner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Winner>("CapRaffleModel.FK_Winner_Category", "Winner", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CapRaffleModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="creator">Initial value of the Creator property.</param>
        /// <param name="availableSpots">Initial value of the AvailableSpots property.</param>
        /// <param name="deadLine">Initial value of the DeadLine property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        public static Event CreateEvent(global::System.Int32 eventId, global::System.String name, global::System.DateTime created, global::System.String creator, global::System.Int32 availableSpots, global::System.DateTime deadLine, global::System.Int32 categoryId, global::System.DateTime startTime)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.Name = name;
            @event.Created = created;
            @event.Creator = creator;
            @event.AvailableSpots = availableSpots;
            @event.DeadLine = deadLine;
            @event.CategoryId = categoryId;
            @event.StartTime = startTime;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AvailableSpots
        {
            get
            {
                return _AvailableSpots;
            }
            set
            {
                OnAvailableSpotsChanging(value);
                ReportPropertyChanging("AvailableSpots");
                _AvailableSpots = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvailableSpots");
                OnAvailableSpotsChanged();
            }
        }
        private global::System.Int32 _AvailableSpots;
        partial void OnAvailableSpotsChanging(global::System.Int32 value);
        partial void OnAvailableSpotsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InformationUrl
        {
            get
            {
                return _InformationUrl;
            }
            set
            {
                OnInformationUrlChanging(value);
                ReportPropertyChanging("InformationUrl");
                _InformationUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InformationUrl");
                OnInformationUrlChanged();
            }
        }
        private global::System.String _InformationUrl;
        partial void OnInformationUrlChanging(global::System.String value);
        partial void OnInformationUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeadLine
        {
            get
            {
                return _DeadLine;
            }
            set
            {
                OnDeadLineChanging(value);
                ReportPropertyChanging("DeadLine");
                _DeadLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeadLine");
                OnDeadLineChanged();
            }
        }
        private global::System.DateTime _DeadLine;
        partial void OnDeadLineChanging(global::System.DateTime value);
        partial void OnDeadLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Event_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CapRaffleModel.FK_Event_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CapRaffleModel.FK_Event_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CapRaffleModel.FK_Event_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("CapRaffleModel.FK_Event_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_UserEvent_Event", "UserEvent")]
        public EntityCollection<UserEvent> UserEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEvent>("CapRaffleModel.FK_UserEvent_Event", "UserEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEvent>("CapRaffleModel.FK_UserEvent_Event", "UserEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Winner_Event", "Winner")]
        public EntityCollection<Winner> Winners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Winner>("CapRaffleModel.FK_Winner_Event", "Winner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Winner>("CapRaffleModel.FK_Winner_Event", "Winner", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CapRaffleModel", Name="Rule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rule object.
        /// </summary>
        /// <param name="ruleId">Initial value of the RuleId property.</param>
        /// <param name="methodName">Initial value of the MethodName property.</param>
        /// <param name="className">Initial value of the ClassName property.</param>
        public static Rule CreateRule(global::System.Int32 ruleId, global::System.String methodName, global::System.String className)
        {
            Rule rule = new Rule();
            rule.RuleId = ruleId;
            rule.MethodName = methodName;
            rule.ClassName = className;
            return rule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleId
        {
            get
            {
                return _RuleId;
            }
            set
            {
                if (_RuleId != value)
                {
                    OnRuleIdChanging(value);
                    ReportPropertyChanging("RuleId");
                    _RuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RuleId");
                    OnRuleIdChanged();
                }
            }
        }
        private global::System.Int32 _RuleId;
        partial void OnRuleIdChanging(global::System.Int32 value);
        partial void OnRuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MethodName
        {
            get
            {
                return _MethodName;
            }
            set
            {
                OnMethodNameChanging(value);
                ReportPropertyChanging("MethodName");
                _MethodName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MethodName");
                OnMethodNameChanged();
            }
        }
        private global::System.String _MethodName;
        partial void OnMethodNameChanging(global::System.String value);
        partial void OnMethodNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_RuleSet_Rule", "RuleSet")]
        public EntityCollection<RuleSet> RuleSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleSet>("CapRaffleModel.FK_RuleSet_Rule", "RuleSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleSet>("CapRaffleModel.FK_RuleSet_Rule", "RuleSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CapRaffleModel", Name="RuleSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RuleSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RuleSet object.
        /// </summary>
        /// <param name="ruleSetId">Initial value of the RuleSetId property.</param>
        /// <param name="ruleId">Initial value of the RuleId property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        public static RuleSet CreateRuleSet(global::System.Int32 ruleSetId, global::System.Int32 ruleId, global::System.Int32 priority)
        {
            RuleSet ruleSet = new RuleSet();
            ruleSet.RuleSetId = ruleSetId;
            ruleSet.RuleId = ruleId;
            ruleSet.Priority = priority;
            return ruleSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleSetId
        {
            get
            {
                return _RuleSetId;
            }
            set
            {
                if (_RuleSetId != value)
                {
                    OnRuleSetIdChanging(value);
                    ReportPropertyChanging("RuleSetId");
                    _RuleSetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RuleSetId");
                    OnRuleSetIdChanged();
                }
            }
        }
        private global::System.Int32 _RuleSetId;
        partial void OnRuleSetIdChanging(global::System.Int32 value);
        partial void OnRuleSetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleId
        {
            get
            {
                return _RuleId;
            }
            set
            {
                if (_RuleId != value)
                {
                    OnRuleIdChanging(value);
                    ReportPropertyChanging("RuleId");
                    _RuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RuleId");
                    OnRuleIdChanged();
                }
            }
        }
        private global::System.Int32 _RuleId;
        partial void OnRuleIdChanging(global::System.Int32 value);
        partial void OnRuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CateogryId
        {
            get
            {
                return _CateogryId;
            }
            set
            {
                OnCateogryIdChanging(value);
                ReportPropertyChanging("CateogryId");
                _CateogryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CateogryId");
                OnCateogryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CateogryId;
        partial void OnCateogryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCateogryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EventId;
        partial void OnEventIdChanging(Nullable<global::System.Int32> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RuleParameter
        {
            get
            {
                return _RuleParameter;
            }
            set
            {
                OnRuleParameterChanging(value);
                ReportPropertyChanging("RuleParameter");
                _RuleParameter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuleParameter");
                OnRuleParameterChanged();
            }
        }
        private Nullable<global::System.Int32> _RuleParameter;
        partial void OnRuleParameterChanging(Nullable<global::System.Int32> value);
        partial void OnRuleParameterChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_RuleSet_Rule", "Rule")]
        public Rule Rule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("CapRaffleModel.FK_RuleSet_Rule", "Rule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("CapRaffleModel.FK_RuleSet_Rule", "Rule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rule> RuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("CapRaffleModel.FK_RuleSet_Rule", "Rule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rule>("CapRaffleModel.FK_RuleSet_Rule", "Rule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CapRaffleModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="email">Initial value of the Email property.</param>
        public static User CreateUser(global::System.String email)
        {
            User user = new User();
            user.Email = email;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_UserEvent_User", "UserEvent")]
        public EntityCollection<UserEvent> UserEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserEvent>("CapRaffleModel.FK_UserEvent_User", "UserEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserEvent>("CapRaffleModel.FK_UserEvent_User", "UserEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Winner_User", "Winner")]
        public EntityCollection<Winner> Winners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Winner>("CapRaffleModel.FK_Winner_User", "Winner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Winner>("CapRaffleModel.FK_Winner_User", "Winner", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CapRaffleModel", Name="UserEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEvent object.
        /// </summary>
        /// <param name="userEmail">Initial value of the UserEmail property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="numberOfSpots">Initial value of the NumberOfSpots property.</param>
        public static UserEvent CreateUserEvent(global::System.String userEmail, global::System.Int32 eventId, global::System.Int32 numberOfSpots)
        {
            UserEvent userEvent = new UserEvent();
            userEvent.UserEmail = userEmail;
            userEvent.EventId = eventId;
            userEvent.NumberOfSpots = numberOfSpots;
            return userEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserEmail
        {
            get
            {
                return _UserEmail;
            }
            set
            {
                if (_UserEmail != value)
                {
                    OnUserEmailChanging(value);
                    ReportPropertyChanging("UserEmail");
                    _UserEmail = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserEmail");
                    OnUserEmailChanged();
                }
            }
        }
        private global::System.String _UserEmail;
        partial void OnUserEmailChanging(global::System.String value);
        partial void OnUserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfSpots
        {
            get
            {
                return _NumberOfSpots;
            }
            set
            {
                OnNumberOfSpotsChanging(value);
                ReportPropertyChanging("NumberOfSpots");
                _NumberOfSpots = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSpots");
                OnNumberOfSpotsChanged();
            }
        }
        private global::System.Int32 _NumberOfSpots;
        partial void OnNumberOfSpotsChanging(global::System.Int32 value);
        partial void OnNumberOfSpotsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_UserEvent_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("CapRaffleModel.FK_UserEvent_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("CapRaffleModel.FK_UserEvent_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("CapRaffleModel.FK_UserEvent_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("CapRaffleModel.FK_UserEvent_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_UserEvent_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CapRaffleModel.FK_UserEvent_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CapRaffleModel.FK_UserEvent_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CapRaffleModel.FK_UserEvent_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CapRaffleModel.FK_UserEvent_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CapRaffleModel", Name="Winner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Winner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Winner object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="userEmail">Initial value of the UserEmail property.</param>
        /// <param name="numberOfSpotsWon">Initial value of the NumberOfSpotsWon property.</param>
        /// <param name="catogoryId">Initial value of the CatogoryId property.</param>
        public static Winner CreateWinner(global::System.Int32 eventId, global::System.String userEmail, global::System.Int32 numberOfSpotsWon, global::System.Int32 catogoryId)
        {
            Winner winner = new Winner();
            winner.EventId = eventId;
            winner.UserEmail = userEmail;
            winner.NumberOfSpotsWon = numberOfSpotsWon;
            winner.CatogoryId = catogoryId;
            return winner;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserEmail
        {
            get
            {
                return _UserEmail;
            }
            set
            {
                if (_UserEmail != value)
                {
                    OnUserEmailChanging(value);
                    ReportPropertyChanging("UserEmail");
                    _UserEmail = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserEmail");
                    OnUserEmailChanged();
                }
            }
        }
        private global::System.String _UserEmail;
        partial void OnUserEmailChanging(global::System.String value);
        partial void OnUserEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfSpotsWon
        {
            get
            {
                return _NumberOfSpotsWon;
            }
            set
            {
                OnNumberOfSpotsWonChanging(value);
                ReportPropertyChanging("NumberOfSpotsWon");
                _NumberOfSpotsWon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfSpotsWon");
                OnNumberOfSpotsWonChanged();
            }
        }
        private global::System.Int32 _NumberOfSpotsWon;
        partial void OnNumberOfSpotsWonChanging(global::System.Int32 value);
        partial void OnNumberOfSpotsWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatogoryId
        {
            get
            {
                return _CatogoryId;
            }
            set
            {
                OnCatogoryIdChanging(value);
                ReportPropertyChanging("CatogoryId");
                _CatogoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CatogoryId");
                OnCatogoryIdChanged();
            }
        }
        private global::System.Int32 _CatogoryId;
        partial void OnCatogoryIdChanging(global::System.Int32 value);
        partial void OnCatogoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Winner_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CapRaffleModel.FK_Winner_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CapRaffleModel.FK_Winner_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CapRaffleModel.FK_Winner_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("CapRaffleModel.FK_Winner_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Winner_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("CapRaffleModel.FK_Winner_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("CapRaffleModel.FK_Winner_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("CapRaffleModel.FK_Winner_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("CapRaffleModel.FK_Winner_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CapRaffleModel", "FK_Winner_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CapRaffleModel.FK_Winner_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CapRaffleModel.FK_Winner_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CapRaffleModel.FK_Winner_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CapRaffleModel.FK_Winner_User", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
